---
title: "Master of Environmental Data Science (MEDS)"
subtitle: "Program Learning Outcome (PLO) #1 Assessment - Core Knowledge"
author: "Sam Csik"
date: June 9, 2023

format: 
  html:
    toc: true
    toc-location: left
    code-tools: 
      source: true
      toggle: false
    theme: 
      - styles.scss
    mainfont: Nunito
    
execute: 
  eval: true
  echo: false
  message: false
  warning: false
editor_options: 
  chunk_output_type: console
---

# **Background**

{{< include /sections/background.qmd >}}

# **Summary**

```{r}
#..........................load packages.........................
library(googlesheets4)
library(tidyverse)
library(janitor)
library(showtext)
library(ggtext)
library(DT)
library(tidytext)
library(wordcloud)

#........................import functions........................
source("R/clean_PLO_data.R")
source("R/meds_theme.R")
source("R/q1_os.R")
source("R/q2_store_data.R")
source("R/part2_plot_freq_use.R")
source("R/q3_gui.R")
source("R/q4_prog_lang.R")
source("R/q5_databases.R")
source("R/q6_version_control.R")
source("R/q7_command_shell.R")
source("R/q8_workflow_satisfaction.R")
source("R/part4_rank_agreement.R")
source("R/q9_raw_data.R")
source("R/q10_small_program.R")
source("R/q11_find_help_online.R")
source("R/q12_overcoming_problems.R")
source("R/q13_confidence.R")
source("R/q14_easier_analysis.R")
source("R/q15_increase_efficiency.R")
source("R/q16_median_mode.R")
source("R/q17_linear_regression.R")
source("R/q18_prob_dist.R")
source("R/q19_functions.R")
source("R/q20_env_mod.R")

#..........................import data...........................
medsJune2023 <- read_sheet("https://docs.google.com/spreadsheets/d/1Sq1rOmBP-g6iOCBS7NoexCj4K-j3OpeErMJ2Hxd3AHo/edit?usp=sharing")

#...........................clean data...........................
medsJune2023_clean <- clean_PLO_data(medsJune2023)
  
#......................import Google fonts.......................
sysfonts::font_add_google(name = "Sanchez", family = "sanchez")
sysfonts::font_add_google(name = "Nunito", family = "nunito")

# automatically use showtext to render text for future devices ----
showtext::showtext_auto()
```

{{< include /sections/summary.qmd >}}

```{r}
#| fig-align: center
scores <- medsJune2023_clean |> 
  select(sc0)

mean_score <- mean(scores$sc0)
median_score <- median(scores$sc0)

ggplot(scores, aes(x = sc0)) +
  geom_histogram(binwidth = 1, color = "white", fill = "#047C91") +
  geom_vline(xintercept = median_score,  linetype = "dashed", color = "black") +
  annotate(geom = "label", x = 10.5, y = 8, label = paste0("Median Score = ", median_score), hjust = "right") +
  annotate(geom = "segment", x = 10.5, y = 8, xend = median_score, yend = 7.5,
           arrow = arrow(length = unit(3, "mm"))) +
  scale_x_continuous(breaks = seq(1, 14, 1)) +
  labs(x = "Score", y = "Number of MEDS studnets",
       title = "Distribution of scores",
       caption = "Out of 14 available points") +
  meds_theme
```

# **Individual Questions**

::: {.callout-note}
Questions that have a correct answer are color-coded green.
:::

## **Part 1: OS and data/document storage**

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 1: What OS?  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

q1_os_data <- clean_q1_os(medsJune2023_clean)
plot_q1_os(q1_os_data)
```

```{r}
#| fig-cap: "NOTE: Percentages will not sum to 100%"
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 2: Where do you store data?  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# combine written-in "server" option ----
server <- c("Server", "Taylor server", "external server")

# wrangle & plot ----
q2_store_data <- clean_q2_store_data(medsJune2023_clean)
plot_q2_store_data(q2_store_data)
```

## **Part 2: How often do you currently use the following?**

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 3: GUI  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q3_gui_data <- clean_q3_gui(medsJune2023_clean)

# plot ----
plot_frequency_use(data = q3_gui_data,
                   title = "A specialized software with a point-and-click graphical user\ninterface (e.g., for statistical analysis: SPSS, SAS...;for Geospatial\nanalysis: ArcGIS, QGIS...; for Genomics analysis: Geneious, …)",
                   caption = "Question 3")

```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 4: Programming Languages  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q4_prog_lang_data <- clean_q4_prog_lang(medsJune2023_clean)

# plot ----
plot_frequency_use(data = q4_prog_lang_data,
                   title = "Programming languages (R, Python, etc.)",
                   caption = "Question 4")
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 5: Databases  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q5_databases_data <- clean_q5_databases(medsJune2023_clean)

# plot ----
plot_frequency_use(data = q5_databases_data, 
                   title = "Databases (SQL, Access, etc.)",
                   caption = "Question 5")
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 6: Version Control  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q6_version_control_data <- clean_q6_version_control(medsJune2023_clean)

# plot ----
plot_frequency_use(data = q6_version_control_data,
                   title = "Version control software (Git, Subversion (SVN), Mercurial, etc.)",
                   caption = "Question 6")

```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 7: Command Shell  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q7_command_shell_data <- clean_q7_command_shell(medsJune2023_clean)

# plot ----
plot_frequency_use(data = q7_command_shell_data,
                   title = "A command shell (usually accessed through Terminal on macOS or\nPowerShell on Windows)",
                   caption = "Question 7")
```

## **Part 3: Workflow satisfaction**

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 8: Workflow Satisfaction  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q8_workflow_satisfaction_data <- clean_q8_workflow_satisfaction(medsJune2023_clean)

# plot ----
plot_q8_workflow_satisfaction(q8_workflow_satisfaction_data)
```

## **Part 4: Rank the following from 1 (strongly disagree) to 5 (strongly agree)**

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 9: Raw Data  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q9_raw_data_data <- clean_q9_raw_data(medsJune2023_clean)

# plot ----
plot_rank_agreement(data = q9_raw_data_data,
                    title = "Having access to the original, raw data is important to be able to\nrepeat an analysis",
                    caption = "Question 9")
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 10: Small Program  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q10_small_program_data <- clean_q10_small_program(medsJune2023_clean)

# plot ----
plot_rank_agreement(data = q10_small_program_data,
                    title = "I can write a small program, script, or macro to address a problem\nin my own work",
                    caption = "Question 10")
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 11: Find Help Online  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q11_find_help_online_data <- clean_q11_find_help_online(medsJune2023_clean)

# plot ----
plot_rank_agreement(data = q11_find_help_online_data ,
                    title = "I know how to search for answers to my technical questions online",
                    caption = "Question 11")
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 12: Overcoming Problems  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q12_overcoming_problems_data <- clean_q12_overcoming_problems(medsJune2023_clean)

# plot ----
plot_rank_agreement(data = q12_overcoming_problems_data,
                    title = "While working on a programming project, if I get stuck, I can find\nways of overcoming the problem",
                    caption = "Question 12")
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 13: Confidence  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q13_confidence_data <- clean_q13_confidence(medsJune2023_clean)

# plot ----
plot_rank_agreement(data = q13_confidence_data,
                    title = "I am confident in my ability to make use of programming software\nto work with data",
                    caption = "Question 13")
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 14: Easier Analyses  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q14_easier_analysis_data <- clean_q14_easier_analysis(medsJune2023_clean)

# plot ----
plot_rank_agreement(data = q14_easier_analysis_data,
                     title = "Using a programming language (like R or Python) can make my\nanalyses easier to reproduce",
                    caption = "Question 14")
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 15: Increase Efficiency  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q15_increase_efficiency_data <- clean_q15_increase_efficiency(medsJune2023_clean)

# plot ----
plot_rank_agreement(data = q15_increase_efficiency_data,
                    title = "Using a programming language (like R or Python) can make me\nmore efficient at working with data",
                    caption = "Question 15")
```

## **Part 5: Stats**

<!-- NOTE TO MAINTAINERS: plotting functions expect palette to be called `pal` -->

```{r}

##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 16a: Median  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q16a_median_data <- clean_q16a_median(medsJune2023_clean)

# plot ----
pal <- c("14" = "#7ECD7A", "0" = "#047C91", "10" = "#047C91")
plot_q16a_median(q16a_median_data)
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 16b: Mode  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q16b_mode_data <- clean_q16b_mode(medsJune2023_clean)

# plot ----
pal <- c("14" = "#7ECD7A")
plot_q16b_mode(q16b_mode_data)
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 17a: Linear Regression Familiarity  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q17a_familiarity_lr_data <- clean_q17a_familiar_lr(medsJune2023_clean)

# plot ----
plot_q17a_familiar_lr(q17a_familiarity_lr_data)
```

{{< include /sections/q17-callout-inline-code.qmd >}}

{{< include /sections/q17b-screenshot.qmd >}}

<!-- NOTE TO MAINTAINERS: see `q17_linear_regression.R` for free response cleaning; will need to be modified for each new set of survey data -->

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 17b: Microplastics  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q17b_microplastics_data <- clean_q17b_microplastics(medsJune2023_clean)

# plot ----
pal <- c("47" = "#7ECD7A", "27" = "#047C91", "900" = "#047C91", "26" = "#047C91", 
         "956" = "#047C91","43" = "#047C91", "911" = "#047C91", "46" = "#047C91")
plot_q17b_microplastics(q17b_microplastics_data)
```

::: {.callout-note}
## Question 17b raw responses
Some respondents recorded their answers in sentence form, while others did not round their answers to the nearest integer. Cleaned responses are shown in the plot, above. Responses as they were recorded are included in the table, below:

```{r}
#............................wrangle.............................
q17_microplastics_dt <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(microplastics_lr)

DT::datatable(q17_microplastics_dt, colnames = c("Free Response Answer to Q17b"),
              
               options = list(autoWidth = TRUE, 
                              pageLength = 5,
                              lengthMenu = c(5, 10, 20, 30),
                              dom = 'ltp')
              
              )
```
:::

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 18a: Probability Distribution Familiarity  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q18a_familiar_prob_dist_data <- clean_q18a_familiar_prob_dist(medsJune2023_clean)

# plot ----
plot_q18a_familiar_prob_dist(q18a_familiar_prob_dist_data)
```

{{< include /sections/q18-callout-inline-code.qmd >}}

```{r}
#| column: margin
#| fig-cap: "62% of respondents correctly answered question 18b (i.e. chose exactly the following options: noraml, uniform, bimodal, symmedtric)"
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 18b: Probabilty Distribution Terms  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# for calculating percentages in wrangling step below ----
q18b_num_answers <- medsJune2023_clean |>
  select(prob_dist_terms) |>
  count() |>
  pull()

# wrangle (INDIV RESPONSES; moved into code chunk) ----
# q18b_prob_dist_terms_data <- clean_q18b_prob_dist_terms(medsJune2023_clean)

# wrangle (FULLY CORRECT; margin plot) ----
q18b_prob_dist_FULLY_CORRECT_data <- clean_q18b_FULLY_CORRECT(medsJune2023_clean)

# plot (FULLY CORRECT; margin plot) ----
pal <- c("yes" = "#7ECD7A", "no" = "#047C91")
plot_q18b_FULLY_CORRECT(q18b_prob_dist_FULLY_CORRECT_data)
```

```{r}
# wrangle (INDIV RESPONSES) ----
q18b_prob_dist_terms_data <- clean_q18b_prob_dist_terms(medsJune2023_clean)

# plot (INDIV RESPONSES) ----
pal <- c("normal" = "#7ECD7A", "uniform" = "#7ECD7A", "bimodal" = "#7ECD7A", "symmetric" = "#7ECD7A", "variable" = "#047C91")
plot_q18b_prob_dist_terms(q18b_prob_dist_terms_data)

```

## **Part 6: Programming 1**

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 19a: Familiarity with Functions  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# idk what this was for? ----
q19_num_answers <- medsJune2023_clean |> 
  select(term_function) |> 
  count() |> 
  pull()

# wrangle ----
q19a_familiar_functions_data <- clean_q19a_familiar_functions(medsJune2023_clean)

# plot ----
plot_q19a_familiar_functions(q19a_familiar_functions_data)
```

{{< include /sections/q19b-callout-inline-code.qmd >}}

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 19b: Writing Functions  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q19b_writing_functions_data <- clean_q19b_writing_functions(medsJune2023_clean)

# plot ----
plot_q19b_writing_functions(q19b_writing_functions_data)
```

{{< include /sections/q19c-callout-inline-code.qmd >}}

{{< include /sections/q19c-turbine-function.qmd >}}

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 19c: Function Output  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q19c_fxn_output_data <- clean_q19c_fxn_output(medsJune2023_clean)

# plot ----
pal <- c("10" = "#7ECD7A")
plot_q19c_fxn_output(q19c_fxn_output_data)
```

## **Part 7: Environmental Modeling**

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 20a: Run Environmental Model  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q20a_run_env_mod_data <- clean_q20a_run_env_mod(medsJune2023_clean)

# plot ----
plot_q20a_run_env_mod(q20a_run_env_mod_data)
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 20b: Sensitivity Analysis  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q20b_sa_data <- clean_q20b_sa(medsJune2023_clean)

# plot ----
plot_q20b_sa(q20b_sa_data)
```

```{r}
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##  ~ Question 20c: Parameter Interactions  ----
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# wrangle ----
q20c_param_int_data <- clean_q20c_param_int(medsJune2023_clean)

# plot ----
pal <- c("a global sensitivity analysis" = "#7ECD7A", "a local sensitivity analysis" = "#047C91", 
         "I'm not sure" = "#047C91", "No response" = "#047C91")
plot_q20c_param_int(q20c_param_int_data)
```

## **Part 8: Geospatial Analysis & Remote Sensing**

```{r}
# ............................wrangle.............................
q21a_num_answers <- medsJune2023_clean |> 
  select(spatial_data) |> 
  count() |> 
  pull()

q21a_spatial_comfort <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(spatial_data) |> 
  
  # sum ----
  group_by(spatial_data) |>
  count() |>
  ungroup() |> 
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(spatial_data = "1 (never worked with it before)", n = 0) |>
  
  # reorder factors ----
  mutate(spatial_data = fct_relevel(spatial_data, 
                                   c("1 (never worked with it before)", "2", 
                                   "3", "4", "5 (work with it all the time)"))) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q21a_spatial_comfort, aes(x = spatial_data, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Comfort level",
       title = "How comfortable are you working with spatial data?",
       caption = "Question 21a (choosing '1 (never worked with it before)' skips respondent to question 22)") +
  meds_theme
```

{{< include /sections/q21-callout-inline-code.qmd >}}

```{r}
# ............................wrangle.............................
# ---- for calculating percentages in wrangling step below ----
q21b_num_answers <- medsJune2023_clean |> 
  select(rep_spatial_data) |> 
  count() |> 
  pull()

# ---- wrangle for individual selection correctness ----
q21b_rep_spatial <- medsJune2023_clean |>

  # select necessary cols ----
  select(rep_spatial_data) |>

  # split strings by `,` delim ----
  separate_longer_delim(rep_spatial_data, delim = ",") |>

  # sum ----
  group_by(rep_spatial_data) |>
  count() |>
  ungroup() |>
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(rep_spatial_data = "tabular", n = 0) |>
  add_row(rep_spatial_data = "relational", n = 0) |>

  # add col for percentages ----
  mutate(percentage = round((n/q21b_num_answers)*100, 1),
         perc_label = paste0(percentage, "%"))

# ---- wrangle for answer correctness ----
q21b_full_correct <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(rep_spatial_data) |> 
    
  mutate(correctness = case_when(
    rep_spatial_data == "raster,vector" ~ "yes",
  )) |> 
  
  # sum ----
  group_by(correctness) |>
  count() |>
  ungroup() |> 
  
  # add no for plotting ----
  add_row(correctness = "no", n = 0) |>
  
  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))
```

```{r}
#| column: margin
#| fig-cap: "100% of respondents correctly answered question 21b (i.e. chose exactly the following options: raster, vector)"
#| #..............................plot..............................
pal <- c("yes" = "#7ECD7A", "no" = "#047C91")

ggplot(q21b_full_correct, aes(x = fct_reorder(correctness, desc(n)), y = n, label = perc_label, fill = correctness)) +
  geom_col() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Did they get the question fully correct?",
       caption = "Question 21b") +
  scale_fill_manual(values = pal, limits = names(pal)) +
  meds_theme
```

```{r}
#..............................plot..............................
pal <- c("vector" = "#7ECD7A", "raster" = "#7ECD7A", "tabular" = "#047C91", "relational" = "#047C91")

ggplot(q21b_rep_spatial, aes(x = fct_reorder(rep_spatial_data, desc(n)), y = n, label = perc_label, fill = rep_spatial_data)) +
  geom_col() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Selection",
       title = "What are the two primary ways of representing spatial data (select\ntwo)?",
       caption = "Question 21b") +
  scale_fill_manual(values = pal, limits = names(pal)) +
  meds_theme
```

```{r}
# ............................wrangle.............................
q21c_vec_ras <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(vec_or_ras) |> 
  
  # sum ----
  group_by(vec_or_ras) |>
  count() |>
  ungroup() |> 
  
  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#| #..............................plot..............................
pal <- c("vector" = "#7ECD7A", "raster" = "#047C91", "I'm not sure" = "#047C91")

ggplot(q21c_vec_ras, aes(x = fct_reorder(vec_or_ras, desc(n)), y = n, label = perc_label, fill = vec_or_ras)) +
  geom_col() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Selection",
       title = "Is the following a vector or raster?",
       caption = "Question 21c") +
  scale_fill_manual(values = pal, limits = names(pal)) +
  meds_theme
```

```{r}
#| fig-align: center
knitr::include_graphics("images/21c-vector.png")
```

```{r}
# ............................wrangle.............................
q22a_rs_comfort <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(remote_sense_comfort) |> 
  
  # sum ----
  group_by(remote_sense_comfort) |>
  count() |>
  ungroup() |> 
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(remote_sense_comfort = "1 (never worked with it before)", n = 0) |>
  
  # reorder factors ----
  mutate(remote_sense_comfort = fct_relevel(remote_sense_comfort, 
                                        c("1 (never worked with it before)", "2", 
                                        "3", "4", "5 (work with it all the time)"))) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q22a_rs_comfort, aes(x = remote_sense_comfort, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Comfort level",
       title = "How comfortable are you working with remotely sensed data?",
       caption = "Question 22a (choosing '1 (never worked with it before)' skips respondent to question 23)") +
  meds_theme
```

{{< include /sections/q22-callout-inline-code.qmd >}}

```{r}
# ............................wrangle.............................
q22b_rs_sun <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(remote_sensing_sun) |> 
  
  # sum ----
  group_by(remote_sensing_sun) |>
  count() |>
  ungroup() |> 
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(remote_sensing_sun = "I'm not sure", n = 0) |>
  
  # coerce to factor ----
  mutate(remote_sensing_sun = as_factor(remote_sensing_sun)) |> 

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
pal <- c("passive" = "#7ECD7A", "active" = "#047C91", "I'm not sure" = "#047C91")

ggplot(q22b_rs_sun, aes(x = fct_reorder(remote_sensing_sun, desc(n)), y = n, label = perc_label, fill = remote_sensing_sun)) +
  geom_col() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Selection",
       title = "The type of remote sensing that relies on reflected radiation\ngenerated by the sun is called ___? (fill in the blank)",
       caption = "Question 22b") +
  scale_fill_manual(values = pal, limits = names(pal)) +
  meds_theme
```

```{r}
# ............................wrangle.............................
q23a_num_answers <- medsJune2023_clean |> 
  select(map_proj_comfort) |> 
  count() |> 
  pull()

q23a_map_proj_comfort <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(map_proj_comfort) |> 

  # sum ----
  group_by(map_proj_comfort) |>
  count() |>
  ungroup() |> 
  
  # coerce to factors ----
  mutate(map_proj_comfort = as_factor(map_proj_comfort)) |> 
  
  # reorder factors ----
  mutate(map_proj_comfort = fct_relevel(map_proj_comfort,
                                        c("1 (never worked with it before)", "2",
                                        "3", "4", "5 (work it with all the time)"))) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q23a_map_proj_comfort, aes(x = map_proj_comfort, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Comfort level",
       title = "How comfortable are you working with map projections?",
       caption = "Question 23a (choosing '1 (never worked with it before)' skips respondent to question 24)") +
  meds_theme
```

{{< include /sections/q23-callout-inline-code.qmd >}}

```{r}
# ............................wrangle.............................
q23b_convert_geo_coord <- medsJune2023_clean |>

  # select necessary cols ----
  select(convert_geo_to_coord) |>

  # sum ----
  group_by(convert_geo_to_coord) |>
  count() |>
  ungroup() |>
  
  # replace NA (from respondent who selected 'No' for previous question) ----
  replace_na(list(convert_geo_to_coord = "No response")) |> 

  # coerce to factors ----
  mutate(convert_geo_to_coord = as_factor(convert_geo_to_coord)) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
pal <- c("3D to 2D" = "#7ECD7A", "Imprecise locations to precise locations" = "#047C91", 
         "Meters to latitude/longitude" = "#047C91", "No response" = "#047C91")


ggplot(q23b_convert_geo_coord, aes(x = fct_reorder(convert_geo_to_coord, desc(n)), y = n, label = perc_label, fill = convert_geo_to_coord)) +
  geom_col() +
 geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Selection",
       title = "Converting from a geographic to projected coordinate system reprojects data from ___ (fill in the blank)",
       caption = "Question 23b") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
  scale_fill_manual(values = pal, limits = names(pal)) +
  meds_theme 
```

```{r}
# ............................wrangle.............................
q24a_ref_spec <- medsJune2023_clean |>

  # select necessary cols ----
  select(reflec_spec) |>

  # sum ----
  group_by(reflec_spec) |>
  count() |>
  ungroup() |>

  # reorder factors ----
  mutate(reflec_spec = fct_relevel(reflec_spec,
                                 c("1 (never heard of it)", "2",
                                 "3 (vague sense of what it means)", "4", "5 (very familiar)"))) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q24a_ref_spec, aes(x = reflec_spec, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Familiarity level",
       title = "How familiar are you with the term reflectance spectra?",
       caption = "Question 24a (choosing '1 (never heard of it)' skips respondent to question 25)") +
  meds_theme
```

{{< include /sections/q24-callout-inline-code.qmd >}}

```{r}
q24b_wavelenghts <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(veg_wavelength) |> 
  
   # sum ----
  group_by(veg_wavelength) |>
  count() |>
  ungroup() |>

  # replace NA (from respondents who selected 'No' for previous question) ----
  replace_na(list(veg_wavelength = "No response")) |> 

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
pal <- c("green" = "#7ECD7A", "red" = "#047C91", "blue" = "#047C91", "blue and thermal" = "#047C91",
         "I'm not sure" = "#047C91", "No response" = "#047C91")

ggplot(q24b_wavelenghts, aes(x = fct_reorder(veg_wavelength, desc(n)), y = n, label = perc_label, fill = veg_wavelength)) +
  geom_col() +
 geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Selection",
       title = "Of the following wavelengths, which one does vegetation reflect the\nmost?",
       caption = "Question 24b") +
  scale_fill_manual(values = pal, limits = names(pal)) +
  meds_theme
```

## **Part 9: Machine Learning**

```{r}
# ............................wrangle.............................
q25a_ml_familiarity <- medsJune2023_clean |>

  # select necessary cols ----
  select(sup_vs_unsup_learn) |>

  # sum ----
  group_by(sup_vs_unsup_learn) |>
  count() |>
  ungroup() |>
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(sup_vs_unsup_learn = "1 (never heard of either of these terms)", n = 0) |>

  # reorder factors ----
  mutate(sup_vs_unsup_learn = fct_relevel(sup_vs_unsup_learn,
                                 c("1 (never heard of either of these terms)", "2",
                                 "3 (vague sense of these terms, but not why they are distinct from one another)", "4", "5 (very familiar with both concepts and how they differ)"))) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q25a_ml_familiarity, aes(x = sup_vs_unsup_learn, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Familiarity level",
       title = "How familiar are you with the difference between supervised and\nunsupervised learning?",
       caption = "Question 25a (choosing '1 (never heard of it)' skips respondent to question 26)") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
  meds_theme
```

{{< include /sections/q25a-callout-inline-code.qmd >}}

```{r}
# ............................wrangle.............................
q25b_unsup_alg <- medsJune2023_clean |>

  # select necessary cols ----
  select(implemented_algo) |>

  # sum ----
  group_by(implemented_algo) |>
  count() |>
  ungroup() |>
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(implemented_algo = "1 (definitely not)", n = 0) |>

  # reorder factors ----
  mutate(implemented_algo = fct_relevel(implemented_algo,
                                 c("1 (definitely not)", "2",
                                 "3 (maybe, but I'm not sure)", "4", "5 (yes)"))) |>
  
  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q25b_unsup_alg, aes(x = implemented_algo, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Selection",
       title = "Have you ever implemented an unsupervised learning algorithm?",
       caption = "Question 25b (choosing '1 (definitely not)' skips respondent to question 26)") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
  meds_theme
```

{{< include /sections/q25b-callout-inline-code.qmd >}}

```{r}
# ............................wrangle.............................
q25c_kmeans <- medsJune2023_clean |>

  # select necessary cols ----
  select(kmeans) |>

  # sum ----
  group_by(kmeans) |>
  count() |>
  ungroup() |>
  
  # coerce to factor ----
  mutate(kmeans = as_factor(kmeans)) |> 

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
pal <- c("unsupervised, does not require expert labeling of data" = "#7ECD7A", 
         "unsupervised, requires expert labeling of data" = "#047C91",
         "supervised, does not require expert labeling of data" = "#047C91",
         "supervised and requires expert labeling of data" = "#047C91", 
         "I'm not sure" = "#047C91")

ggplot(q25c_kmeans, aes(x = fct_reorder(kmeans, desc(n)), y = n, label = perc_label, fill = kmeans)) +
  geom_col() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Selection",
       title = "K-means clustering is an example of a(n) ___ learning approach\nbecause it ___ (fill in the blanks).",
       caption = "Question 25c") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
  scale_fill_manual(values = pal, limits = names(pal)) +
  meds_theme
```

```{r}
# ............................wrangle.............................
q26a_ml_div <- medsJune2023_clean |>

  # select necessary cols ----
  select(ml_div_data) |>

  # sum ----
  group_by(ml_div_data) |>
  count() |>
  ungroup() |>
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(ml_div_data = "1 (never heard of it)", n = 0) |>
  add_row(ml_div_data = "2", n = 0) |>

  # reorder factors ----
  mutate(ml_div_data = fct_relevel(ml_div_data,
                                 c("1 (never heard of it)", "2",
                                 "3 (vague sense of what it means)", 
                                 "4", "5 (very familiar)"))) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q26a_ml_div, aes(x = ml_div_data, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Familiarity level",
       title = "How familiar are you with the procedure that divides your data into\nseparate “training”, “validation”, and “testing” sets?",
       caption = "Question 26a (choosing '1 (never heard of it)' skips respondent to question 27)") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
  meds_theme
```

{{< include /sections/q26a-callout-inline-code.qmd >}}

```{r}
# ............................wrangle.............................
q26b_tvs <- medsJune2023_clean |>

  # select necessary cols ----
  select(train_valid_split) |>

  # sum ----
  group_by(train_valid_split) |>
  count() |>
  ungroup() |>
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(train_valid_split = "1 (never)", n = 0) |>

  # reorder factors ----
  mutate(train_valid_split = fct_relevel(train_valid_split,
                                 c("1 (never)", "2", "3", "4", "5 (all the time)"))) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q26b_tvs, aes(x = train_valid_split, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Selection",
       title = "How often have you implemented a train, validation, test split?",
       caption = "Question 26b (choosing '1 (never)' skips respondent to question 27)") +
  scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
  meds_theme
```

{{< include /sections/q26b-callout-inline-code.qmd >}}

```{r}
#| column: margin
#| fig-cap: "75.9% of respondents correctly answered question 26c (i.e. chose exactly the following options: My model is likely to perform very well when applied to new data, My test set has data entry errors in it)"
# ............................wrangle.............................
# ---- for calculating percentages in wrangling step below ----
q26c_num_answers <- medsJune2023_clean |>
  select(learning_from_model) |>
  count() |>
  pull()

# ---- wrangle for individual selection correctness ----
q26c_learn_mod <- medsJune2023_clean |>

  # select necessary cols ----
  select(learning_from_model) |>

  # split strings by `,` delim ----
  separate_longer_delim(learning_from_model, delim = ",") |>

  # sum ----
  group_by(learning_from_model) |>
  count() |>
  ungroup() |>
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(learning_from_model = "My model is likely to perform very well when applied to new data", n = 0) |>
  add_row(learning_from_model = "My test set has data entry errors in it", n = 0) |>

  # add col for percentages ----
  mutate(percentage = round((n/q26c_num_answers)*100, 1),
         perc_label = paste0(percentage, "%"))

# ---- wrangle for answer correctness ----
q26c_full_correct <- medsJune2023_clean |>

  # select necessary cols ----
  select(learning_from_model) |>

  # sum ----
  group_by(learning_from_model) |>
  count() |>
  ungroup() |>

  # add correct or incorrect label ----
  mutate(correctness = case_when(
    learning_from_model == "My model is overfitting the training set" ~ "no",
    learning_from_model == "My model is unlikely to perform well when applied to new data,My model is overfitting the training set" ~ "yes",
  )) |>

  # coerce data types ----
  mutate(correctness = as_factor(correctness)) |>

  # sum ----
  group_by(correctness) |>
  summarize(total = sum(n)) |>
  ungroup() |>

  # add col for percentages ----
  mutate(percentage = round((total/(sum(total)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
# number of students who correctly chose all four selections
pal <- c("yes" = "#7ECD7A", "no" = "#047C91")

ggplot(q26c_full_correct, aes(x = fct_reorder(correctness, desc(total)), y = total, label = perc_label, fill = correctness)) +
  geom_col() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Did they get the question fully correct?",
       caption = "Question 26c") +
  scale_fill_manual(values = pal, limits = names(pal)) +
  meds_theme
```

```{r}
#..............................plot..............................
# number of students who chose each option
pal <- c("My model is unlikely to perform well when applied to new data" = "#7ECD7A", 
         "My model is overfitting the training set" = "#7ECD7A", 
         "My model is likely to perform very well when applied to new data" = "#047C91",
         "My test set has data entry errors in it" = "#047C91")

ggplot(q26c_learn_mod, aes(x = fct_reorder(learning_from_model, desc(n)), y = n, label = perc_label, fill = learning_from_model)) +
  geom_col() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Selection",
       title = "If my model performs very well in my training set, moderately well\nin my validation set, and poorly in my test set, what do I learn from\nthis (choose all that apply)?",
       caption = "Question 26c") +
   scale_fill_manual(values = pal, limits = names(pal)) +
   scale_x_discrete(labels = function(x) str_wrap(x, width = 15)) +
  meds_theme
```

## **Part 10: Environmental Justice**

```{r}
#............................wrangle.............................
q27_data_justice <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(data_justice) |> 
  
  # sum ----
  group_by(data_justice) |>
  count() |>
  ungroup() |> 
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(data_justice = "2", n = 0) |>
  
  # reorder factors ----
  mutate(data_justice = fct_relevel(data_justice, 
                                    c("1 (never heard of it)", "2", 
                                    "3 (vague sense of what it means)", "4", "5 (very familiar)"))) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q27_data_justice, aes(x = data_justice, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Familiarity level",
       title = " How familiar are you with the term Data Justice?",
       caption = "Question 27") +
  meds_theme
```

```{r}
#............................wrangle.............................
q28_bias <- medsJune2023_clean |>

  # select necessary cols ----
  select(bias) |>
  
  # sum ----
  group_by(bias) |>
  count() |>
  ungroup() |>

  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(bias = "2", n = 0) |>
  add_row(bias = "1 (strongly disagree)", n = 0) |> 
  
  # reorder factors ----
  mutate(bias = fct_relevel(bias, 
                            c("1 (strongly disagree)", "2", 
                            "3 (neutral)", "4", "5 (strongly agree)"))) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q28_bias, aes(x = bias, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Agreement level",
       title = "I can identify areas of bias in approaches to data analysis.",
       caption = "Question 28") +
  meds_theme
```

## **Part 11: Data Viz & Communication**

```{r}
# ............................wrangle.............................
q29_create_viz <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(data_viz_programming) |> 
  
  # sum ----
  group_by(data_viz_programming) |>
  count() |>
  ungroup() |> 
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(data_viz_programming = "1 (never done it)", n = 0) |>
  
  # reorder factors ----
  mutate(data_viz_programming = fct_relevel(data_viz_programming, 
                                           c("1 (never done it)", "2", 
                                           "3", "4", "5 (very comfortable, do it often)"))) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
ggplot(q29_create_viz, aes(x = data_viz_programming, y = n, label = perc_label)) +
  geom_col(fill = "#047C91") +
  coord_flip() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Comfort level",
       title = "How comfortable are you with creating a data visualization using a\nprogramming language?",
       caption = "Question 29") +
  meds_theme
```

#### Identify 4 areas for improvement in the following data visualization that shows information about Michigan counties with highest college attendance.

```{r}
#| fig-align: center
knitr::include_graphics("images/30-plot.png")
```

```{r}
#| fig-width: 3
#| fig-align: center
#| fig-cap: "Wordcloud of most frequently occurring words used to describe suggested improvements to the above data visualization (Question 30)" 
#| fig-cap-location: top
# ............................wrangle.............................
q30_improve_dv <- medsJune2023_clean |>

  # select necessary cols ----
  select(improve_data_viz) |> 
  
  # split strings by `,` delim ----
  separate_longer_delim(improve_data_viz, " ")  |> 
  separate_longer_delim(improve_data_viz, ",") |> 
  separate_longer_delim(improve_data_viz, ".") |>  
  separate_longer_delim(improve_data_viz, ")") |>  
  separate_longer_delim(improve_data_viz, "(") |> 
  separate_longer_delim(improve_data_viz, ";") |> 
  filter(improve_data_viz != "") |> 
  filter(!improve_data_viz %in% c("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "-")) |> 
  mutate(improve_data_viz = str_to_lower(improve_data_viz)) |> 
  group_by(improve_data_viz) |> 
  count() |> 
  arrange(desc(n)) |> 
  rename(word = improve_data_viz) |> 
  anti_join(y = stop_words)

#..............................plot..............................
wordcloud(q30_improve_dv$word, freq = q30_improve_dv$n,
          min.freq = 1, max.words = 85, 
          random.order = FALSE, rot.per = 0.35,
          scale = c(4, .5), colors = brewer.pal(8, "Dark2")) 
```

::: {.callout-note}
## Question 30 raw responses
Free responses as they were recorded are included in the table, below:

```{r}
#............................wrangle.............................
q30_improve_dv <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(improve_data_viz)

DT::datatable(q30_improve_dv, colnames = c("Free Response Answer to Q30"),
              
               options = list(autoWidth = TRUE, 
                              pageLength = 5,
                              lengthMenu = c(5, 10, 20, 30),
                              dom = 'ltp')
              
              )
```
:::

## **Part 13: Programming 2**

```{r}
#| eval: false
#| echo: true
# define function
def convert_F_to_C(temp_F):
  temp_C = (temp_F-32)*5/9
  return temp_C

# use function
convert_F_to_C(32)
```

```{r}
#............................wrangle.............................
q31_what_lang <- medsJune2023_clean |> 
  
  # select necessary cols ----
  select(what_lang_is_this) |> 
  
  # sum ----
  group_by(what_lang_is_this) |>
  count() |>
  ungroup() |> 
  
  # ONLY ADDING BC NO ONE SELECTED THE FOLLOWING OPTIONS ----
  add_row(what_lang_is_this = "SQL", n = 0) |>

  # add col for percentages ----
  mutate(percentage = round((n/(sum(n)))*100, 1),
         perc_label = paste0(percentage, "%"))

#..............................plot..............................
pal <- c("Python" = "#7ECD7A", "R" = "#047C91", "SQL" = "#047C91")

ggplot(q31_what_lang, aes(x = what_lang_is_this, y = n, label = perc_label, fill = what_lang_is_this)) +
  geom_col() +
  geom_text(position = position_stack(vjust = 0.5), size = 3, color = "white", family = "nunito") +
  labs(y = "Number of MEDS students", x = "Language",
       title = "What programming language is the above code written in?",
       caption = "Question 31") +
  scale_fill_manual(values = pal, limits = names(pal)) +
  meds_theme
```

